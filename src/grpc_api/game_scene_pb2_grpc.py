# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from grpc_api import game_scene_pb2 as grpc__api_dot_game__scene__pb2


class GameSceneStub(object):
    """Servicer:

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Start = channel.unary_unary(
                '/game_scene.GameScene/Start',
                request_serializer=grpc__api_dot_game__scene__pb2.Players.SerializeToString,
                response_deserializer=grpc__api_dot_game__scene__pb2.Response.FromString,
                )
        self.Move = channel.unary_unary(
                '/game_scene.GameScene/Move',
                request_serializer=grpc__api_dot_game__scene__pb2.Matches.SerializeToString,
                response_deserializer=grpc__api_dot_game__scene__pb2.Response.FromString,
                )
        self.Leave = channel.unary_unary(
                '/game_scene.GameScene/Leave',
                request_serializer=grpc__api_dot_game__scene__pb2.Player.SerializeToString,
                response_deserializer=grpc__api_dot_game__scene__pb2.Response.FromString,
                )
        self.Get = channel.unary_unary(
                '/game_scene.GameScene/Get',
                request_serializer=grpc__api_dot_game__scene__pb2.RequestState.SerializeToString,
                response_deserializer=grpc__api_dot_game__scene__pb2.Response.FromString,
                )
        self.Stop = channel.unary_unary(
                '/game_scene.GameScene/Stop',
                request_serializer=grpc__api_dot_game__scene__pb2.Game.SerializeToString,
                response_deserializer=grpc__api_dot_game__scene__pb2.Response.FromString,
                )


class GameSceneServicer(object):
    """Servicer:

    """

    def Start(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Move(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Leave(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Stop(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GameSceneServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Start': grpc.unary_unary_rpc_method_handler(
                    servicer.Start,
                    request_deserializer=grpc__api_dot_game__scene__pb2.Players.FromString,
                    response_serializer=grpc__api_dot_game__scene__pb2.Response.SerializeToString,
            ),
            'Move': grpc.unary_unary_rpc_method_handler(
                    servicer.Move,
                    request_deserializer=grpc__api_dot_game__scene__pb2.Matches.FromString,
                    response_serializer=grpc__api_dot_game__scene__pb2.Response.SerializeToString,
            ),
            'Leave': grpc.unary_unary_rpc_method_handler(
                    servicer.Leave,
                    request_deserializer=grpc__api_dot_game__scene__pb2.Player.FromString,
                    response_serializer=grpc__api_dot_game__scene__pb2.Response.SerializeToString,
            ),
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=grpc__api_dot_game__scene__pb2.RequestState.FromString,
                    response_serializer=grpc__api_dot_game__scene__pb2.Response.SerializeToString,
            ),
            'Stop': grpc.unary_unary_rpc_method_handler(
                    servicer.Stop,
                    request_deserializer=grpc__api_dot_game__scene__pb2.Game.FromString,
                    response_serializer=grpc__api_dot_game__scene__pb2.Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'game_scene.GameScene', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class GameScene(object):
    """Servicer:

    """

    @staticmethod
    def Start(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/game_scene.GameScene/Start',
            grpc__api_dot_game__scene__pb2.Players.SerializeToString,
            grpc__api_dot_game__scene__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Move(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/game_scene.GameScene/Move',
            grpc__api_dot_game__scene__pb2.Matches.SerializeToString,
            grpc__api_dot_game__scene__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Leave(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/game_scene.GameScene/Leave',
            grpc__api_dot_game__scene__pb2.Player.SerializeToString,
            grpc__api_dot_game__scene__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/game_scene.GameScene/Get',
            grpc__api_dot_game__scene__pb2.RequestState.SerializeToString,
            grpc__api_dot_game__scene__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Stop(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/game_scene.GameScene/Stop',
            grpc__api_dot_game__scene__pb2.Game.SerializeToString,
            grpc__api_dot_game__scene__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
